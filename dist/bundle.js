!function(t){var e={};function T(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,T),i.l=!0,i.exports}T.m=t,T.c=e,T.d=function(t,e,n){T.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},T.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},T.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return T.d(e,"a",e),e},T.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},T.p="",T(T.s=9)}([function(t,e){t.exports={Always:1,Never:2,IfAtMostOneObstacle:3,OnlyWhenNoObstacles:4}},function(t,e){function T(t){for(var e=[[t.x,t.y]];t.parent;)t=t.parent,e.push([t.x,t.y]);return e.reverse()}function n(t,e,T,n){var i,o,r,s,a,l,h=Math.abs,u=[];for(r=h(T-t),s=h(n-e),i=t<T?1:-1,o=e<n?1:-1,a=r-s;u.push([t,e]),t!==T||e!==n;)(l=2*a)>-s&&(a-=s,t+=i),l<r&&(a+=r,e+=o);return u}e.backtrace=T,e.biBacktrace=function(t,e){var n=T(t),i=T(e);return n.concat(i.reverse())},e.pathLength=function(t){var e,T,n,i,o,r=0;for(e=1;e<t.length;++e)T=t[e-1],n=t[e],i=T[0]-n[0],o=T[1]-n[1],r+=Math.sqrt(i*i+o*o);return r},e.interpolate=n,e.expandPath=function(t){var e,T,i,o,r,s,a=[],l=t.length;if(l<2)return a;for(r=0;r<l-1;++r)for(e=t[r],T=t[r+1],o=(i=n(e[0],e[1],T[0],T[1])).length,s=0;s<o-1;++s)a.push(i[s]);return a.push(t[l-1]),a},e.smoothenPath=function(t,e){var T,i,o,r,s,a,l,h,u,p=e.length,c=e[0][0],f=e[0][1],d=e[p-1][0],g=e[p-1][1];for(o=[[T=c,i=f]],r=2;r<p;++r){for(l=n(T,i,(a=e[r])[0],a[1]),u=!1,s=1;s<l.length;++s)if(h=l[s],!t.isWalkableAt(h[0],h[1])){u=!0;break}u&&(lastValidCoord=e[r-1],o.push(lastValidCoord),T=lastValidCoord[0],i=lastValidCoord[1])}return o.push([d,g]),o},e.compressPath=function(t){if(t.length<3)return t;var e,T,n,i,o,r,s=[],a=t[0][0],l=t[0][1],h=t[1][0],u=t[1][1],p=h-a,c=u-l;for(p/=o=Math.sqrt(p*p+c*c),c/=o,s.push([a,l]),r=2;r<t.length;r++)e=h,T=u,n=p,i=c,p=(h=t[r][0])-e,c=(u=t[r][1])-T,c/=o=Math.sqrt(p*p+c*c),(p/=o)===n&&c===i||s.push([e,T]);return s.push([h,u]),s}},function(t,e){t.exports={manhattan:function(t,e){return t+e},euclidean:function(t,e){return Math.sqrt(t*t+e*e)},octile:function(t,e){var T=Math.SQRT2-1;return t<e?T*t+e:T*e+t},chebyshev:function(t,e){return Math.max(t,e)}}},function(t,e,T){var n=T(4),i=T(1),o=T(2);T(0);function r(t){t=t||{},this.heuristic=t.heuristic||o.manhattan,this.trackJumpRecursion=t.trackJumpRecursion||!1}r.prototype.findPath=function(t,e,T,o,r){var s,a=this.openList=new n(function(t,e){return t.f-e.f}),l=this.startNode=r.getNodeAt(t,e),h=this.endNode=r.getNodeAt(T,o);for(this.grid=r,l.g=0,l.f=0,a.push(l),l.opened=!0;!a.empty();){if((s=a.pop()).closed=!0,s===h)return i.expandPath(i.backtrace(h));this._identifySuccessors(s)}return[]},r.prototype._identifySuccessors=function(t){var e,T,n,i,r,s,a,l,h,u,p=this.grid,c=this.heuristic,f=this.openList,d=this.endNode.x,g=this.endNode.y,b=t.x,v=t.y,y=Math.abs;Math.max;for(i=0,r=(e=this._findNeighbors(t)).length;i<r;++i)if(T=e[i],n=this._jump(T[0],T[1],b,v)){if(s=n[0],a=n[1],(u=p.getNodeAt(s,a)).closed)continue;l=o.octile(y(s-b),y(a-v)),h=t.g+l,(!u.opened||h<u.g)&&(u.g=h,u.h=u.h||c(y(s-d),y(a-g)),u.f=u.g+u.h,u.parent=t,u.opened?f.updateItem(u):(f.push(u),u.opened=!0))}},t.exports=r},function(t,e,T){t.exports=T(24)},function(t,e,T){var n=T(4),i=T(1),o=T(2),r=T(0);function s(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.diagonalMovement=t.diagonalMovement,this.heuristic=t.heuristic||o.manhattan,this.weight=t.weight||1,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=r.OnlyWhenNoObstacles:this.diagonalMovement=r.IfAtMostOneObstacle:this.diagonalMovement=r.Never),this.diagonalMovement===r.Never?this.heuristic=t.heuristic||o.manhattan:this.heuristic=t.heuristic||o.octile}s.prototype.findPath=function(t,e,T,o,r){var s,a,l,h,u,p,c,f,d=function(t,e){return t.f-e.f},g=new n(d),b=new n(d),v=r.getNodeAt(t,e),y=r.getNodeAt(T,o),m=this.heuristic,A=this.diagonalMovement,k=this.weight,W=Math.abs,M=Math.SQRT2;for(v.g=0,v.f=0,g.push(v),v.opened=1,y.g=0,y.f=0,b.push(y),y.opened=2;!g.empty()&&!b.empty();){for((s=g.pop()).closed=!0,h=0,u=(a=r.getNeighbors(s,A)).length;h<u;++h)if(!(l=a[h]).closed){if(2===l.opened)return i.biBacktrace(s,l);p=l.x,c=l.y,f=s.g+(p-s.x==0||c-s.y==0?1:M),(!l.opened||f<l.g)&&(l.g=f,l.h=l.h||k*m(W(p-T),W(c-o)),l.f=l.g+l.h,l.parent=s,l.opened?g.updateItem(l):(g.push(l),l.opened=1))}for((s=b.pop()).closed=!0,h=0,u=(a=r.getNeighbors(s,A)).length;h<u;++h)if(!(l=a[h]).closed){if(1===l.opened)return i.biBacktrace(l,s);p=l.x,c=l.y,f=s.g+(p-s.x==0||c-s.y==0?1:M),(!l.opened||f<l.g)&&(l.g=f,l.h=l.h||k*m(W(p-t),W(c-e)),l.f=l.g+l.h,l.parent=s,l.opened?b.updateItem(l):(b.push(l),l.opened=2))}}return[]},t.exports=s},function(t,e,T){var n=T(4),i=T(1),o=T(2),r=T(0);function s(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.heuristic=t.heuristic||o.manhattan,this.weight=t.weight||1,this.diagonalMovement=t.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=r.OnlyWhenNoObstacles:this.diagonalMovement=r.IfAtMostOneObstacle:this.diagonalMovement=r.Never),this.diagonalMovement===r.Never?this.heuristic=t.heuristic||o.manhattan:this.heuristic=t.heuristic||o.octile}s.prototype.findPath=function(t,e,T,o,r){var s,a,l,h,u,p,c,f,d=new n(function(t,e){return t.f-e.f}),g=r.getNodeAt(t,e),b=r.getNodeAt(T,o),v=this.heuristic,y=this.diagonalMovement,m=this.weight,A=Math.abs,k=Math.SQRT2;for(g.g=0,g.f=0,d.push(g),g.opened=!0;!d.empty();){if((s=d.pop()).closed=!0,s===b)return i.backtrace(b);for(h=0,u=(a=r.getNeighbors(s,y)).length;h<u;++h)(l=a[h]).closed||(p=l.x,c=l.y,f=s.g+(p-s.x==0||c-s.y==0?1:k),(!l.opened||f<l.g)&&(l.g=f,l.h=l.h||m*v(A(p-T),A(c-o)),l.f=l.g+l.h,l.parent=s,l.opened?d.updateItem(l):(d.push(l),l.opened=!0)))}return[]},t.exports=s},function(t,e){t.exports=function(t,e,T){this.x=t,this.y=e,this.walkable=void 0===T||T}},function(t,e,T){t.exports=T(25)},function(t,e,T){"use strict";T.r(e);var n=function(){return function(t){var e=this;for(var T in this.imgs={grass:{path:"images/grass.png",element:null},tree:{path:"images/tree.png",element:null}},this.loadedImgs=0,this.numberOfImgs=Object.keys(this.imgs).length,this.imgs){var n=this.imgs[T];n.element=new Image,n.element.src=n.path,n.element.onload=function(){++e.loadedImgs===e.numberOfImgs&&t()}}console.log(this.imgs)}}(),i=T(8),o=function(){function t(t){this.imgs=t.assets.imgs,this.level=t.level,this.zeroOneMatrixOfLevel=this.toZeroOneMatrix(),this.player=t.player,this.canvas=document.getElementById("level"),this.ctx=this.canvas.getContext("2d"),this.canvas.width=800,this.canvas.height=600,this.animate()}return t.prototype.animate=function(){this.movePlayerIfRequested(),this.drawLevel(),window.requestAnimationFrame(this.animate.bind(this))},t.prototype.toZeroOneMatrix=function(){for(var t=this.level.length,e=this.level[0].length,T=new Array(t),n=0;n<t;n++){T[n]=new Array(e);for(var i=0;i<e;i++)T[n][i]="T"===this.level[n][i]?1:0}return T},t.prototype.movePlayerIfRequested=function(){if(this.player.requestedPosition){if(void 0===this.pathToRequestedPosition){var t=new i.DijkstraFinder,e=new i.Grid(this.zeroOneMatrixOfLevel);this.pathToRequestedPosition=t.findPath(this.player.currentPosition.x,this.player.currentPosition.y,this.player.requestedPosition.x,this.player.requestedPosition.y,e)}if(0===this.pathToRequestedPosition.length)return this.player.requestedPosition=void 0,void(this.pathToRequestedPosition=void 0);var T=this.pathToRequestedPosition.shift();this.level[this.player.currentPosition.y][this.player.currentPosition.x]="0",this.player.currentPosition.x=T[0],this.player.currentPosition.y=T[1],this.level[this.player.currentPosition.y][this.player.currentPosition.x]="P"}},t.prototype.drawLevel=function(){var t=this;this.ctx.clearRect(0,0,800,600),this.level.forEach(function(e,T){e.forEach(function(e,n){var i=20*n,o=20*T;"0"===e?t.ctx.drawImage(t.imgs.grass.element,i,o):"T"===e?t.ctx.drawImage(t.imgs.tree.element,i,o):"P"===e&&(t.ctx.fillStyle="rgb(0, 0, 0)",t.ctx.fillRect(i,o,20,20))})})},t}(),r=function(){function t(t){this.currentPosition={x:0,y:0},document.getElementById("level").addEventListener("click",this.move.bind(this))}return t.prototype.move=function(t){this.requestedPosition={x:Math.floor(t.offsetX/20),y:Math.floor(t.offsetY/20)}},t}(),s=[["P","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T"],["0","0","0","T","T","T","T","T","0","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T"],["0","0","0","0","0","T","0","0","0","0","0","0","0","0","T","T","T","T","T","T","T","T","0","0","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T"],["T","0","0","0","0","0","0","0","0","0","0","0","0","T","T","T","T","T","T","T","T","T","0","0","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T"],["T","T","0","0","0","0","0","0","0","0","0","0","0","0","T","T","T","T","T","T","0","0","0","0","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T"],["T","T","0","0","0","0","0","0","0","0","0","0","0","0","T","T","T","T","T","T","0","0","0","0","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T"],["T","T","0","0","0","0","0","0","T","T","T","0","0","0","T","T","0","T","T","T","0","0","0","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T"],["T","T","T","0","0","0","T","T","T","T","T","0","0","0","T","T","0","T","T","0","0","0","0","T","T","T","T","T","0","0","0","0","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","0","0","0","T","T","0","0","0","0","T","T","T","T","T","T","0","0","0","0","0","0","0","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","0","0","0","T","T","0","0","0","0","0","0","T","T","T","T","0","0","0","0","T","T","0","0","0","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","0","0","0","0","0","0","0","0","0","0","0","0","T","T","T","0","0","0","T","T","T","T","0","0","0","0","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","0","0","0","0","0","0","0","0","0","0","0","0","0","T","T","0","0","T","T","T","T","T","T","T","0","0","0","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","0","0","0","T","0","0","0","0","0","0","0","0","T","T","T","T","T","T","T","T","0","0","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","0","T","T","T","0","0","0","0","0","0","T","T","T","T","T","T","T","T","T","T","0","0","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","0","0","0","0","0","0","T","T","T","T","T","T","T","T","T","T","0","0","0","0"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","0","0","T","T","T","T","T","T","T","T","T","T","0","0","0","0"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","0","T","T","T","T","T","T","T","T","T","T","0","0","0","0"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","0","0"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"],["T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","0","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T","T"]];T.d(e,"Game",function(){return a});var a=function(){return function(){var t=this;this.assets=new n(function(){t.level=s,t.player=new r(t),t.engine=new o(t)})}}();new a},function(t,e,T){var n=T(3),i=T(0);function o(t){n.call(this,t)}o.prototype=new n,o.prototype.constructor=o,o.prototype._jump=function(t,e,T,n){var i=this.grid,o=t-T,r=e-n;if(!i.isWalkableAt(t,e))return null;if(!0===this.trackJumpRecursion&&(i.getNodeAt(t,e).tested=!0),i.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o&&0!==r){if(i.isWalkableAt(t-o,e+r)&&!i.isWalkableAt(t-o,e)||i.isWalkableAt(t+o,e-r)&&!i.isWalkableAt(t,e-r))return[t,e];if(this._jump(t+o,e,t,e)||this._jump(t,e+r,t,e))return[t,e]}else if(0!==o){if(i.isWalkableAt(t+o,e+1)&&!i.isWalkableAt(t,e+1)||i.isWalkableAt(t+o,e-1)&&!i.isWalkableAt(t,e-1))return[t,e]}else if(i.isWalkableAt(t+1,e+r)&&!i.isWalkableAt(t+1,e)||i.isWalkableAt(t-1,e+r)&&!i.isWalkableAt(t-1,e))return[t,e];return i.isWalkableAt(t+o,e)||i.isWalkableAt(t,e+r)?this._jump(t+o,e+r,t,e):null},o.prototype._findNeighbors=function(t){var e,T,n,o,r,s,a,l,h=t.parent,u=t.x,p=t.y,c=this.grid,f=[];if(h)e=h.x,T=h.y,n=(u-e)/Math.max(Math.abs(u-e),1),o=(p-T)/Math.max(Math.abs(p-T),1),0!==n&&0!==o?(c.isWalkableAt(u,p+o)&&f.push([u,p+o]),c.isWalkableAt(u+n,p)&&f.push([u+n,p]),(c.isWalkableAt(u,p+o)||c.isWalkableAt(u+n,p))&&f.push([u+n,p+o]),!c.isWalkableAt(u-n,p)&&c.isWalkableAt(u,p+o)&&f.push([u-n,p+o]),!c.isWalkableAt(u,p-o)&&c.isWalkableAt(u+n,p)&&f.push([u+n,p-o])):0===n?c.isWalkableAt(u,p+o)&&(f.push([u,p+o]),c.isWalkableAt(u+1,p)||f.push([u+1,p+o]),c.isWalkableAt(u-1,p)||f.push([u-1,p+o])):c.isWalkableAt(u+n,p)&&(f.push([u+n,p]),c.isWalkableAt(u,p+1)||f.push([u+n,p+1]),c.isWalkableAt(u,p-1)||f.push([u+n,p-1]));else for(a=0,l=(r=c.getNeighbors(t,i.IfAtMostOneObstacle)).length;a<l;++a)s=r[a],f.push([s.x,s.y]);return f},t.exports=o},function(t,e,T){var n=T(3),i=T(0);function o(t){n.call(this,t)}o.prototype=new n,o.prototype.constructor=o,o.prototype._jump=function(t,e,T,n){var i=this.grid,o=t-T,r=e-n;if(!i.isWalkableAt(t,e))return null;if(!0===this.trackJumpRecursion&&(i.getNodeAt(t,e).tested=!0),i.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o&&0!==r){if(this._jump(t+o,e,t,e)||this._jump(t,e+r,t,e))return[t,e]}else if(0!==o){if(i.isWalkableAt(t,e-1)&&!i.isWalkableAt(t-o,e-1)||i.isWalkableAt(t,e+1)&&!i.isWalkableAt(t-o,e+1))return[t,e]}else if(0!==r&&(i.isWalkableAt(t-1,e)&&!i.isWalkableAt(t-1,e-r)||i.isWalkableAt(t+1,e)&&!i.isWalkableAt(t+1,e-r)))return[t,e];return i.isWalkableAt(t+o,e)&&i.isWalkableAt(t,e+r)?this._jump(t+o,e+r,t,e):null},o.prototype._findNeighbors=function(t){var e,T,n,o,r,s,a,l,h,u=t.parent,p=t.x,c=t.y,f=this.grid,d=[];if(u){if(e=u.x,T=u.y,n=(p-e)/Math.max(Math.abs(p-e),1),o=(c-T)/Math.max(Math.abs(c-T),1),0!==n&&0!==o)f.isWalkableAt(p,c+o)&&d.push([p,c+o]),f.isWalkableAt(p+n,c)&&d.push([p+n,c]),f.isWalkableAt(p,c+o)&&f.isWalkableAt(p+n,c)&&d.push([p+n,c+o]);else if(0!==n){h=f.isWalkableAt(p+n,c);var g=f.isWalkableAt(p,c+1),b=f.isWalkableAt(p,c-1);h&&(d.push([p+n,c]),g&&d.push([p+n,c+1]),b&&d.push([p+n,c-1])),g&&d.push([p,c+1]),b&&d.push([p,c-1])}else if(0!==o){h=f.isWalkableAt(p,c+o);var v=f.isWalkableAt(p+1,c),y=f.isWalkableAt(p-1,c);h&&(d.push([p,c+o]),v&&d.push([p+1,c+o]),y&&d.push([p-1,c+o])),v&&d.push([p+1,c]),y&&d.push([p-1,c])}}else for(a=0,l=(r=f.getNeighbors(t,i.OnlyWhenNoObstacles)).length;a<l;++a)s=r[a],d.push([s.x,s.y]);return d},t.exports=o},function(t,e,T){var n=T(3),i=T(0);function o(t){n.call(this,t)}o.prototype=new n,o.prototype.constructor=o,o.prototype._jump=function(t,e,T,n){var i=this.grid,o=t-T,r=e-n;if(!i.isWalkableAt(t,e))return null;if(!0===this.trackJumpRecursion&&(i.getNodeAt(t,e).tested=!0),i.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o&&0!==r){if(i.isWalkableAt(t-o,e+r)&&!i.isWalkableAt(t-o,e)||i.isWalkableAt(t+o,e-r)&&!i.isWalkableAt(t,e-r))return[t,e];if(this._jump(t+o,e,t,e)||this._jump(t,e+r,t,e))return[t,e]}else if(0!==o){if(i.isWalkableAt(t+o,e+1)&&!i.isWalkableAt(t,e+1)||i.isWalkableAt(t+o,e-1)&&!i.isWalkableAt(t,e-1))return[t,e]}else if(i.isWalkableAt(t+1,e+r)&&!i.isWalkableAt(t+1,e)||i.isWalkableAt(t-1,e+r)&&!i.isWalkableAt(t-1,e))return[t,e];return this._jump(t+o,e+r,t,e)},o.prototype._findNeighbors=function(t){var e,T,n,o,r,s,a,l,h=t.parent,u=t.x,p=t.y,c=this.grid,f=[];if(h)e=h.x,T=h.y,n=(u-e)/Math.max(Math.abs(u-e),1),o=(p-T)/Math.max(Math.abs(p-T),1),0!==n&&0!==o?(c.isWalkableAt(u,p+o)&&f.push([u,p+o]),c.isWalkableAt(u+n,p)&&f.push([u+n,p]),c.isWalkableAt(u+n,p+o)&&f.push([u+n,p+o]),c.isWalkableAt(u-n,p)||f.push([u-n,p+o]),c.isWalkableAt(u,p-o)||f.push([u+n,p-o])):0===n?(c.isWalkableAt(u,p+o)&&f.push([u,p+o]),c.isWalkableAt(u+1,p)||f.push([u+1,p+o]),c.isWalkableAt(u-1,p)||f.push([u-1,p+o])):(c.isWalkableAt(u+n,p)&&f.push([u+n,p]),c.isWalkableAt(u,p+1)||f.push([u+n,p+1]),c.isWalkableAt(u,p-1)||f.push([u+n,p-1]));else for(a=0,l=(r=c.getNeighbors(t,i.Always)).length;a<l;++a)s=r[a],f.push([s.x,s.y]);return f},t.exports=o},function(t,e,T){var n=T(3),i=T(0);function o(t){n.call(this,t)}o.prototype=new n,o.prototype.constructor=o,o.prototype._jump=function(t,e,T,n){var i=this.grid,o=t-T,r=e-n;if(!i.isWalkableAt(t,e))return null;if(!0===this.trackJumpRecursion&&(i.getNodeAt(t,e).tested=!0),i.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o){if(i.isWalkableAt(t,e-1)&&!i.isWalkableAt(t-o,e-1)||i.isWalkableAt(t,e+1)&&!i.isWalkableAt(t-o,e+1))return[t,e]}else{if(0===r)throw new Error("Only horizontal and vertical movements are allowed");if(i.isWalkableAt(t-1,e)&&!i.isWalkableAt(t-1,e-r)||i.isWalkableAt(t+1,e)&&!i.isWalkableAt(t+1,e-r))return[t,e];if(this._jump(t+1,e,t,e)||this._jump(t-1,e,t,e))return[t,e]}return this._jump(t+o,e+r,t,e)},o.prototype._findNeighbors=function(t){var e,T,n,o,r,s,a,l,h=t.parent,u=t.x,p=t.y,c=this.grid,f=[];if(h)e=h.x,T=h.y,n=(u-e)/Math.max(Math.abs(u-e),1),o=(p-T)/Math.max(Math.abs(p-T),1),0!==n?(c.isWalkableAt(u,p-1)&&f.push([u,p-1]),c.isWalkableAt(u,p+1)&&f.push([u,p+1]),c.isWalkableAt(u+n,p)&&f.push([u+n,p])):0!==o&&(c.isWalkableAt(u-1,p)&&f.push([u-1,p]),c.isWalkableAt(u+1,p)&&f.push([u+1,p]),c.isWalkableAt(u,p+o)&&f.push([u,p+o]));else for(a=0,l=(r=c.getNeighbors(t,i.Never)).length;a<l;++a)s=r[a],f.push([s.x,s.y]);return f},t.exports=o},function(t,e,T){var n=T(0),i=T(13),o=T(12),r=T(11),s=T(10);t.exports=function(t){return(t=t||{}).diagonalMovement===n.Never?new i(t):t.diagonalMovement===n.Always?new o(t):t.diagonalMovement===n.OnlyWhenNoObstacles?new r(t):new s(t)}},function(t,e,T){T(1);var n=T(2),i=T(7),o=T(0);function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.diagonalMovement=t.diagonalMovement,this.heuristic=t.heuristic||n.manhattan,this.weight=t.weight||1,this.trackRecursion=t.trackRecursion||!1,this.timeLimit=t.timeLimit||1/0,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=o.OnlyWhenNoObstacles:this.diagonalMovement=o.IfAtMostOneObstacle:this.diagonalMovement=o.Never),this.diagonalMovement===o.Never?this.heuristic=t.heuristic||n.manhattan:this.heuristic=t.heuristic||n.octile}r.prototype.findPath=function(t,e,T,n,o){var r,s,a,l=(new Date).getTime(),h=function(t,e){return this.heuristic(Math.abs(e.x-t.x),Math.abs(e.y-t.y))}.bind(this),u=function(t,e,T,n,r){if(0,this.timeLimit>0&&(new Date).getTime()-l>1e3*this.timeLimit)return 1/0;var s,a,p,f,d=e+h(t,c)*this.weight;if(d>T)return d;if(t==c)return n[r]=[t.x,t.y],t;var g,b,v=o.getNeighbors(t,this.diagonalMovement);for(p=0,s=1/0;f=v[p];++p){if(this.trackRecursion&&(f.retainCount=f.retainCount+1||1,!0!==f.tested&&(f.tested=!0)),(a=u(f,e+(b=f,(g=t).x===b.x||g.y===b.y?1:Math.SQRT2),T,n,r+1))instanceof i)return n[r]=[t.x,t.y],a;this.trackRecursion&&0==--f.retainCount&&(f.tested=!1),a<s&&(s=a)}return s}.bind(this),p=o.getNodeAt(t,e),c=o.getNodeAt(T,n),f=h(p,c);for(r=0;;++r){if((a=u(p,0,f,s=[],0))===1/0)return[];if(a instanceof i)return s;f=a}return[]},t.exports=r},function(t,e,T){var n=T(5);function i(t){n.call(this,t),this.heuristic=function(t,e){return 0}}i.prototype=new n,i.prototype.constructor=i,t.exports=i},function(t,e,T){var n=T(1),i=T(0);function o(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.diagonalMovement=t.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=i.OnlyWhenNoObstacles:this.diagonalMovement=i.IfAtMostOneObstacle:this.diagonalMovement=i.Never)}o.prototype.findPath=function(t,e,T,i,o){var r,s,a,l,h,u=o.getNodeAt(t,e),p=o.getNodeAt(T,i),c=[],f=[],d=this.diagonalMovement;for(c.push(u),u.opened=!0,u.by=0,f.push(p),p.opened=!0,p.by=1;c.length&&f.length;){for((a=c.shift()).closed=!0,l=0,h=(r=o.getNeighbors(a,d)).length;l<h;++l)if(!(s=r[l]).closed)if(s.opened){if(1===s.by)return n.biBacktrace(a,s)}else c.push(s),s.parent=a,s.opened=!0,s.by=0;for((a=f.shift()).closed=!0,l=0,h=(r=o.getNeighbors(a,d)).length;l<h;++l)if(!(s=r[l]).closed)if(s.opened){if(0===s.by)return n.biBacktrace(s,a)}else f.push(s),s.parent=a,s.opened=!0,s.by=1}return[]},t.exports=o},function(t,e,T){var n=T(5);function i(t){n.call(this,t);var e=this.heuristic;this.heuristic=function(t,T){return 1e6*e(t,T)}}i.prototype=new n,i.prototype.constructor=i,t.exports=i},function(t,e,T){var n=T(6);function i(t){n.call(this,t),this.heuristic=function(t,e){return 0}}i.prototype=new n,i.prototype.constructor=i,t.exports=i},function(t,e,T){var n=T(1),i=T(0);function o(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.diagonalMovement=t.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=i.OnlyWhenNoObstacles:this.diagonalMovement=i.IfAtMostOneObstacle:this.diagonalMovement=i.Never)}o.prototype.findPath=function(t,e,T,i,o){var r,s,a,l,h,u=[],p=this.diagonalMovement,c=o.getNodeAt(t,e),f=o.getNodeAt(T,i);for(u.push(c),c.opened=!0;u.length;){if((a=u.shift()).closed=!0,a===f)return n.backtrace(f);for(l=0,h=(r=o.getNeighbors(a,p)).length;l<h;++l)(s=r[l]).closed||s.opened||(u.push(s),s.opened=!0,s.parent=a)}return[]},t.exports=o},function(t,e,T){var n=T(6);function i(t){n.call(this,t);var e=this.heuristic;this.heuristic=function(t,T){return 1e6*e(t,T)}}i.prototype=new n,i.prototype.constructor=i,t.exports=i},function(t,e,T){var n=T(7),i=T(0);function o(t,e,T){var n;"object"!=typeof t?n=t:(e=t.length,n=t[0].length,T=t),this.width=n,this.height=e,this.nodes=this._buildNodes(n,e,T)}o.prototype._buildNodes=function(t,e,T){var i,o,r=new Array(e);for(i=0;i<e;++i)for(r[i]=new Array(t),o=0;o<t;++o)r[i][o]=new n(o,i);if(void 0===T)return r;if(T.length!==e||T[0].length!==t)throw new Error("Matrix size does not fit");for(i=0;i<e;++i)for(o=0;o<t;++o)T[i][o]&&(r[i][o].walkable=!1);return r},o.prototype.getNodeAt=function(t,e){return this.nodes[e][t]},o.prototype.isWalkableAt=function(t,e){return this.isInside(t,e)&&this.nodes[e][t].walkable},o.prototype.isInside=function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height},o.prototype.setWalkableAt=function(t,e,T){this.nodes[e][t].walkable=T},o.prototype.getNeighbors=function(t,e){var T=t.x,n=t.y,o=[],r=!1,s=!1,a=!1,l=!1,h=!1,u=!1,p=!1,c=!1,f=this.nodes;if(this.isWalkableAt(T,n-1)&&(o.push(f[n-1][T]),r=!0),this.isWalkableAt(T+1,n)&&(o.push(f[n][T+1]),a=!0),this.isWalkableAt(T,n+1)&&(o.push(f[n+1][T]),h=!0),this.isWalkableAt(T-1,n)&&(o.push(f[n][T-1]),p=!0),e===i.Never)return o;if(e===i.OnlyWhenNoObstacles)s=p&&r,l=r&&a,u=a&&h,c=h&&p;else if(e===i.IfAtMostOneObstacle)s=p||r,l=r||a,u=a||h,c=h||p;else{if(e!==i.Always)throw new Error("Incorrect value of diagonalMovement");s=!0,l=!0,u=!0,c=!0}return s&&this.isWalkableAt(T-1,n-1)&&o.push(f[n-1][T-1]),l&&this.isWalkableAt(T+1,n-1)&&o.push(f[n-1][T+1]),u&&this.isWalkableAt(T+1,n+1)&&o.push(f[n+1][T+1]),c&&this.isWalkableAt(T-1,n+1)&&o.push(f[n+1][T-1]),o},o.prototype.clone=function(){var t,e,T=this.width,i=this.height,r=this.nodes,s=new o(T,i),a=new Array(i);for(t=0;t<i;++t)for(a[t]=new Array(T),e=0;e<T;++e)a[t][e]=new n(e,t,r[t][e].walkable);return s.nodes=a,s},t.exports=o},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,T){(function(t){(function(){var e,T,n,i,o,r,s,a,l,h,u,p,c,f,d;n=Math.floor,h=Math.min,T=function(t,e){return t<e?-1:t>e?1:0},l=function(t,e,i,o,r){var s;if(null==i&&(i=0),null==r&&(r=T),i<0)throw new Error("lo must be non-negative");for(null==o&&(o=t.length);i<o;)r(e,t[s=n((i+o)/2)])<0?o=s:i=s+1;return[].splice.apply(t,[i,i-i].concat(e)),e},r=function(t,e,n){return null==n&&(n=T),t.push(e),f(t,0,t.length-1,n)},o=function(t,e){var n,i;return null==e&&(e=T),n=t.pop(),t.length?(i=t[0],t[0]=n,d(t,0,e)):i=n,i},a=function(t,e,n){var i;return null==n&&(n=T),i=t[0],t[0]=e,d(t,0,n),i},s=function(t,e,n){var i;return null==n&&(n=T),t.length&&n(t[0],e)<0&&(e=(i=[t[0],e])[0],t[0]=i[1],d(t,0,n)),e},i=function(t,e){var i,o,r,s,a,l;for(null==e&&(e=T),a=[],o=0,r=(s=function(){l=[];for(var e=0,T=n(t.length/2);0<=T?e<T:e>T;0<=T?e++:e--)l.push(e);return l}.apply(this).reverse()).length;o<r;o++)i=s[o],a.push(d(t,i,e));return a},c=function(t,e,n){var i;if(null==n&&(n=T),-1!==(i=t.indexOf(e)))return f(t,0,i,n),d(t,i,n)},u=function(t,e,n){var o,r,a,l,h;if(null==n&&(n=T),!(r=t.slice(0,e)).length)return r;for(i(r,n),a=0,l=(h=t.slice(e)).length;a<l;a++)o=h[a],s(r,o,n);return r.sort(n).reverse()},p=function(t,e,n){var r,s,a,u,p,c,f,d,g;if(null==n&&(n=T),10*e<=t.length){if(!(a=t.slice(0,e).sort(n)).length)return a;for(s=a[a.length-1],u=0,c=(f=t.slice(e)).length;u<c;u++)n(r=f[u],s)<0&&(l(a,r,0,null,n),a.pop(),s=a[a.length-1]);return a}for(i(t,n),g=[],p=0,d=h(e,t.length);0<=d?p<d:p>d;0<=d?++p:--p)g.push(o(t,n));return g},f=function(t,e,n,i){var o,r,s;for(null==i&&(i=T),o=t[n];n>e&&i(o,r=t[s=n-1>>1])<0;)t[n]=r,n=s;return t[n]=o},d=function(t,e,n){var i,o,r,s,a;for(null==n&&(n=T),o=t.length,a=e,r=t[e],i=2*e+1;i<o;)(s=i+1)<o&&!(n(t[i],t[s])<0)&&(i=s),t[e]=t[i],i=2*(e=i)+1;return t[e]=r,f(t,a,e,n)},e=function(){function t(t){this.cmp=null!=t?t:T,this.nodes=[]}return t.push=r,t.pop=o,t.replace=a,t.pushpop=s,t.heapify=i,t.updateItem=c,t.nlargest=u,t.nsmallest=p,t.prototype.push=function(t){return r(this.nodes,t,this.cmp)},t.prototype.pop=function(){return o(this.nodes,this.cmp)},t.prototype.peek=function(){return this.nodes[0]},t.prototype.contains=function(t){return-1!==this.nodes.indexOf(t)},t.prototype.replace=function(t){return a(this.nodes,t,this.cmp)},t.prototype.pushpop=function(t){return s(this.nodes,t,this.cmp)},t.prototype.heapify=function(){return i(this.nodes,this.cmp)},t.prototype.updateItem=function(t){return c(this.nodes,t,this.cmp)},t.prototype.clear=function(){return this.nodes=[]},t.prototype.empty=function(){return 0===this.nodes.length},t.prototype.size=function(){return this.nodes.length},t.prototype.clone=function(){var e;return(e=new t).nodes=this.nodes.slice(0),e},t.prototype.toArray=function(){return this.nodes.slice(0)},t.prototype.insert=t.prototype.push,t.prototype.top=t.prototype.peek,t.prototype.front=t.prototype.peek,t.prototype.has=t.prototype.contains,t.prototype.copy=t.prototype.clone,t}(),(void 0!==t&&null!==t?t.exports:void 0)?t.exports=e:window.Heap=e}).call(this)}).call(this,T(23)(t))},function(t,e,T){t.exports={Heap:T(4),Node:T(7),Grid:T(22),Util:T(1),DiagonalMovement:T(0),Heuristic:T(2),AStarFinder:T(6),BestFirstFinder:T(21),BreadthFirstFinder:T(20),DijkstraFinder:T(19),BiAStarFinder:T(5),BiBestFirstFinder:T(18),BiBreadthFirstFinder:T(17),BiDijkstraFinder:T(16),IDAStarFinder:T(15),JumpPointFinder:T(14)}}]);